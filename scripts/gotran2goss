#!/usr/bin/env python
__author__ = "Johan Hake (hake.dev@gmail.com)"
__date__ = "2012-09-20 -- 2014-04-10"
__copyright__ = "Copyright (C) 2012 " + __author__
__license__  = "GNU LGPL Version 3.0 or later"

import os

from gotran.model.loadmodel import load_ode
from gotran import list_timings
from goss.codegeneration import GossCodeGenerator
from goss import error

def main(filename, params):
    """
    Create a c header file from a gotran model
    """

    # Load Gotran model
    ode = load_ode(filename)

    # Code generators
    cgen = GossCodeGenerator(ode, params.field_states, \
                             params.field_parameters, \
                             params.monitored, params.code)
    output = params.output

    if output:
        if not(len(output)>2 and output[-2:] == ".h"):
            output += ".h"
    else:
        output = filename.replace(".ode", "")+".h"

    f = open(output, "w")
    f.write("#include <goss.h>\n\n")
    f.write(cgen.class_code())
    if params.list_timings:
        list_timings()

if __name__ == "__main__":
    import sys
    from modelparameters.parameterdict import ParameterDict, OptionParam, Param

    code_params = GossCodeGenerator.default_parameters()
    
    params = ParameterDict(\
        output = Param("", description="Specify output file name"),\
        field_parameters = Param([], description="Parameters which should be "\
                                 "treated as field parameters."),\
        field_states = Param([], description="States which should be "\
                             "treated as field states."),\
        monitored = Param([], description="Monitored intermediates."),\
        list_timings = Param(False, description="Print timings of codegeneration."),
        code = code_params)
    
    params.parse_args(usage="usage: %prog FILE [options]")#sys.argv[2:])
    
    if len(sys.argv) < 2:
        error("Expected a single gotran file argument")

    if not os.path.isfile(sys.argv[1]):
        error("Expected the argument to be a file", exception=IOError)
	 
    file_name = sys.argv[1]
    main(file_name, params)
